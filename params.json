{
  "name": "Algolia exam",
  "tagline": "",
  "body": "### CSE Test - Place2Eat\r\nAlgolia exam POC (proof of concept) site of Nathan Wharton (@nat).\r\nSee the source code here: https://github.com/nat/algolia_exam\r\n\r\n# Instructions for Installation of CSE Test - Place2Eat\r\n\r\n## Install Dependencies\r\n* node.js (version 7.1.0 was used for development)\r\n* ruby (version 2.3.0 was used for development)(only needed if you want to implement this POC in your own Algolia index)\r\n\r\n## Download\r\n* Clone the git repository (using e.g: `git clone https://github.com/nat/algolia_exam.git`) to your local machine.\r\n* Run `npm install` to download the dependencies (from the project root)\r\n* Or run `npm run server`\r\n\r\n# If you want to install from scratch in your own environment do the following:\r\n\r\n## Index Algolia\r\n* Open your terminal to the root of the project and execute `ruby combine_and_export_as_json.rb`.\r\n* The program will generate a new file, `export_for_algolia.json` in the root of the project.\r\n* import `export_for_algolia.json` to a new algolia index using Algolia's web interface.\r\n\r\n## Configure Algolia\r\n* Name the new index `poc_restaurants` (for the proof of concept restaurants listing)\r\n* Under the index tab, click on \"ranking\" and set \"Searchable Attributes\" to `name, food_type, neighborhood, area, city`.\r\n* Set \"Custom Ranking Attributes\" to `name`, and `stars_count`.\r\n* Under the index tab, click on \"Display\" and set \"Attributes for Faceting\" to `foot_type` and `stars_count`.\r\n\r\n## Configure Your HTML\r\n* edit the `assets/js/main.js` file and set `var APPLICATION_ID = '0OCVIREAOB';`\r\n\tand\r\n\t`var SEARCH_ONLY_API_KEY = 'a4a59fd80b0436442ed0e8dbaf48e449';`\r\n\tto Algolia's settings.\r\n\r\n## Start Node\r\n* Run `npm install` to download the dependencies\r\n* Then run `npm run dev` to create a server, and automatically refresh the page every time on of the `*.scss`, `*.less`, `*.html` files get updated.\r\n* Or run `npm run server` if you only want to run the server\r\n\r\n## Type!\r\n* Enter 'a' or anything in the search bar - and you'll start seeing results.\r\n\r\nIf you have any questions, do not hesitate to contact me!\r\n\r\n## Addendum\r\nIf I had extra time, I'd start implementing the display of stars as described here:\r\nhttp://stackoverflow.com/questions/1987524/turn-a-number-into-star-rating-display-using-jquery-and-css among other things! :)\r\n\r\n## Original Exam Instructions (for reference):\r\n\r\nOur sales team has recently been contacted by a large restaurant reservation website, for who it as identified as strategic to build a demo. As a Customer Solutions Engineer, you're asked to build a small prototype that, using the dataset and UI they have provided us, highlights the benefits of a great search experience.\r\n\r\n* Push the provided dataset to an Algolia index\r\n* Produce the HTML markup and CSS needed to reproduce the UI provided by the client. To do so, you can write with vanilla CSS or a processor of your choice. We've provided configs for Sass and LESS.\r\n* Using the Algolia JS Helper ([documentation](https://www.algolia.com/doc/guides/search/instant-search/algoliahelperjs)), implement an as-you-type search experience that enables users to easily find restaurants: both by passing a search query and/or filtering on the \"type of cuisine\".\r\n\r\n![image](https://github.com/nat/algolia_exam/blob/master/resources/mockups/regular-version.png)\r\n*Screenshot of the demo once completed*\r\n\r\n**Important Notes**\r\n\r\n* Graphical resources, including the Sketch mockup, are provided in the `./resources` folder\r\n* The dataset given by the client is available in the `./resources/dataset` folder. They have been able to extract 5000 restaurants from their database: `restaurants_list.json`. Unfortunately, because of some system complexity on their side, they haven't been able to provide everything in one file only. They sent us another file called `restaurants_info.csv` that contains additional information for all the extracted restaurants.\r\n\t* You'll need to manipulate both data files in order to have access to the \"type of cuisine\".\r\n* The project is already all setup for you, if you're using Sass, LESS you shouldn't have to configure anything\r\n\t* Run `npm install` to download the dependencies\r\n\t* Then run `npm run dev` to create a server, and automatically refresh the page every time on of the `*.scss`, `*.less`, `*.html` files get updated.\r\n\t* Or run `npm run server` if you only want to run the server\r\n* Feel free to use any front-end tooling with which you're the most confortable.\r\n* The blue highlight in the sidebar is an active / over state.\r\n\r\n### Bonus\r\nIf you have time, feel free to add a star-based rating in the search results, and eventually in the sidebar.\r\n\r\n![image](https://github.com/nat/algolia_exam/blob/master/resources/mockups/full-version.png)\r\n\r\n\r\n# Evaluation criteria:\r\nThe goal of this test is to evaluate your ability to build a front-end implementation using Algolia.\r\n\r\n**Criterion**\r\n\r\n* Overall look'n'feel of the demo: relevance, UI & UX\r\n* Quality of the code: legibility and re-usability\r\n* Attention given to details\r\n\r\n\r\n# Deliverable:\r\nOnce you're happy with what you've done \r\n\r\n* Create a Github public repository to host the code *(including the import script if you have one)*\r\n* Publish it using GitHub's gh-pages so we can interact with it\r\n\r\n\r\nHappy coding!\r\n\r\n**Note:** \r\nThe provided dataset has been created using https://github.com/sosedoff/opentable project.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}